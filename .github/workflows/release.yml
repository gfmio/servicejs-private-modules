name: Release

on:
  release:
    branches: [main]
    types: [published]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: ["lts/*"]
    steps:
      - uses: actions/checkout@v4
      - name: Assert that the release version and package version match
        run: |
          release_version=$(echo "${{ github.event.release.tag_name }}" | sed -E 's/^v//')
          package_version=$(node -p "require('./packages/modules/package.json').version")
          if [ "$release_version" != "$package_version" ]; then
            echo "The release version \"$release_version\" and package version \"$package_version\" do not match. Please update the package version to match the release version."
            exit 1
          fi
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://registry.npmjs.org"
          cache: "yarn"
          cache-dependency-path: "yarn.lock"
      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile
      - name: lint
        run: |
          yarn lint

      #
      # Package
      #

      - name: package:typecheck
        run: |
          yarn workspace @servicejs-private/modules run typecheck
      - name: package:test
        run: |
          yarn workspace @servicejs-private/modules run test
      - name: package:build
        run: |
          yarn workspace @servicejs-private/modules run build

      #
      # Examples
      #

      # basic

      - name: example:basic:typecheck
        run: |
          yarn workspace example-basic run typecheck
      - name: example:basic:test
        run: |
          yarn workspace example-basic run test
      - name: example:basic:build
        run: |
          yarn workspace example-basic run build
      - name: example:basic:start
        run: |
          yarn workspace example-basic run start

      #
      # Publish
      #

      - name: publish
        run: |
          yarn workspace @servicejs-private/modules publish --access restricted
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
